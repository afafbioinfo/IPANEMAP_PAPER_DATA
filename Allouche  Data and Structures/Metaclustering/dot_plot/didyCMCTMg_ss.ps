%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.1
%%CreationDate: Fri Apr 26 11:37:02 2019
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: --noLP 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGUUGGGUUGGGAAGUAUCAUGGCUAAUCACCAUGAUGCAAUCGGGUUGAACACUUAAUUGGGUUAAAACGGUGGGGGACGAUCCCGUAACAUCCGUCCUAACGGCGACAGACUGCACGGCCCUGCCUCUUAGGUGUGUUCAAUGAACAGUCGUUCCGAAAGGAAGCAUCCGGUAUCCCAAGACAAUC\
) def
/coor [
[8.27840996 428.50473022]
[8.27840996 413.50473022]
[8.27840996 398.50473022]
[8.27840996 383.50473022]
[8.27840996 368.50473022]
[-2.40246224 358.18704224]
[-2.61614299 342.97491455]
[8.27840996 331.84176636]
[8.27840996 316.84176636]
[8.27840996 301.84176636]
[8.27840996 286.84176636]
[8.27840996 271.84176636]
[8.27840996 256.84176636]
[7.76471472 256.60403442]
[7.25854683 256.35064697]
[-4.46892548 265.70297241]
[-16.19639778 275.05532837]
[-27.92387009 284.40768433]
[-39.65134048 293.76004028]
[-51.37881470 303.11236572]
[-63.10628510 312.46472168]
[-74.83375549 321.81707764]
[-86.56123352 331.16940308]
[-86.77018738 346.80560303]
[-97.02010345 358.61547852]
[-112.47127533 361.02279663]
[-125.82814026 352.89086914]
[-130.78399658 338.05935669]
[-124.99883270 323.53125000]
[-111.20423126 316.16629028]
[-95.91358185 319.44195557]
[-84.18610382 310.08959961]
[-72.45863342 300.73724365]
[-60.73116302 291.38488770]
[-49.00368881 282.03256226]
[-37.27621841 272.68020630]
[-25.54874420 263.32785034]
[-13.82127285 253.97550964]
[-2.09380031 244.62316895]
[0.86070430 227.87292480]
[16.70398712 220.05053711]
[22.98671341 206.42970276]
[29.26943970 192.80885315]
[35.55216599 179.18801880]
[41.83489227 165.56716919]
[48.11761856 151.94633484]
[54.40034485 138.32548523]
[90.27294922 83.56834412]
[90.52227020 68.57041168]
[90.77159119 53.57248688]
[91.02091217 38.57455826]
[91.27023315 23.57663155]
[91.51955414 8.57870388]
[91.76887512 -6.41922426]
[80.20584106 -5.26935768]
[67.41822052 -9.86357594]
[56.11800385 -20.69068527]
[49.12206650 -37.02949142]
[48.84029388 -56.96654129]
[42.10830688 -70.37103271]
[35.37631989 -83.77552032]
[28.64433098 -97.18000793]
[21.91234398 -110.58450317]
[14.69254684 -97.43632507]
[-0.05854134 -94.71504211]
[-11.49458218 -104.42158508]
[-11.20675850 -119.41882324]
[0.59329510 -128.67942810]
[15.23044777 -125.39310455]
[9.63447380 -139.31018066]
[4.03850079 -153.22726440]
[-1.55747283 -167.14433289]
[-7.61293364 -180.86772156]
[-14.12118912 -194.38226318]
[-27.07992744 -203.45869446]
[-25.63101578 -218.28265381]
[-32.13927078 -231.79719543]
[-38.64752960 -245.31172180]
[-45.15578461 -258.82626343]
[-57.47568893 -270.47341919]
[-49.69419861 -285.53610229]
[-33.06602859 -282.22848511]
[-31.64125061 -265.33450317]
[-25.13299561 -251.81997681]
[-18.62473869 -238.30545044]
[-12.11648369 -224.79092407]
[0.37673977 -216.68113708]
[-0.60665655 -200.89051819]
[5.90159941 -187.37597656]
[8.52059460 -186.32711792]
[10.87771702 -184.16778564]
[12.54424191 -180.99400330]
[13.13468933 -177.05635071]
[12.35960579 -172.74031067]
[17.95557976 -158.82322693]
[23.55155373 -144.90615845]
[29.14752579 -130.98907471]
[35.31683350 -117.31649017]
[42.04882050 -103.91199493]
[48.78080750 -90.50750732]
[55.51279449 -77.10301971]
[62.24478531 -63.69852829]
[77.23183441 -63.07537460]
[85.05335999 -75.87474060]
[92.76824188 -88.73866272]
[100.37594604 -101.66626740]
[107.98365021 -114.59386444]
[103.77809143 -129.82832336]
[111.64926147 -143.53308105]
[126.92733002 -147.57733154]
[140.54809570 -139.56170654]
[144.43060303 -124.24173737]
[136.27142334 -110.70647430]
[120.91125488 -106.98616028]
[113.30355072 -94.05856323]
[105.69584656 -81.13095856]
[105.01171112 -73.75769806]
[97.85272217 -68.05321503]
[90.03119659 -55.25384903]
[94.89968872 -49.54877853]
[102.74250031 -62.33510971]
[117.32658386 -58.82732391]
[118.49717712 -43.87306976]
[104.63666534 -38.13864136]
[109.50515747 -32.43357468]
[123.37524414 -38.14501953]
[137.24533081 -43.85646439]
[151.11543274 -49.56790924]
[163.45921326 -61.18975067]
[178.04397583 -52.54560471]
[173.77510071 -36.13788986]
[156.82687378 -35.69781876]
[142.95678711 -29.98637390]
[129.08668518 -24.27492905]
[115.21659851 -18.56348419]
[106.76679993 -6.16990328]
[106.51747894 8.82802486]
[106.26815796 23.82595253]
[106.01883698 38.82387924]
[105.76951599 53.82180786]
[105.52019501 68.81973267]
[105.27087402 83.81766510]
[114.52542877 95.62245941]
[129.14935303 98.96027374]
[143.77326965 102.29808807]
[158.39718628 105.63590240]
[173.89974976 100.28775024]
[186.10357666 111.24214172]
[182.45442200 127.23012543]
[166.70622253 131.80464172]
[155.05937195 120.25981903]
[140.43545532 116.92200470]
[125.81153870 113.58419037]
[111.18761444 110.24637604]
[105.24642181 124.01961517]
[117.70980072 132.36611938]
[130.17318726 140.71263123]
[146.56312561 141.26170349]
[154.04281616 155.85575867]
[144.91778564 169.48167419]
[128.57507324 168.12228394]
[121.82667542 153.17601013]
[109.36329651 144.82949829]
[96.89991760 136.48300171]
[89.68022919 138.51429749]
[85.97917175 153.05053711]
[75.24086761 142.57690430]
[68.02118683 144.60821533]
[61.73846054 158.22904968]
[55.45573425 171.84989929]
[49.17300797 185.47073364]
[42.89028168 199.09158325]
[36.60755539 212.71241760]
[30.32482910 226.33326721]
[34.59814072 243.77597046]
[23.27840996 256.84176636]
[23.27840996 271.84176636]
[23.27840996 286.84176636]
[23.27840996 301.84176636]
[23.27840996 316.84176636]
[23.27840996 331.84176636]
[34.17296219 342.97491455]
[33.95928192 358.18704224]
[23.27840996 368.50473022]
[23.27840996 383.50473022]
[23.27840996 398.50473022]
[23.27840996 413.50473022]
[23.27840996 428.50473022]
] def
/pairs [
[1 188]
[2 187]
[3 186]
[4 185]
[5 184]
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[15 39]
[16 38]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 31]
[41 174]
[42 173]
[43 172]
[44 171]
[45 170]
[46 169]
[47 168]
[48 142]
[49 141]
[50 140]
[51 139]
[52 138]
[53 137]
[54 136]
[59 102]
[60 101]
[61 100]
[62 99]
[63 98]
[69 97]
[70 96]
[71 95]
[72 94]
[73 89]
[74 88]
[76 86]
[77 85]
[78 84]
[79 83]
[103 119]
[104 118]
[105 116]
[106 115]
[107 114]
[125 135]
[126 134]
[127 133]
[128 132]
[143 154]
[144 153]
[145 152]
[146 151]
[155 164]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
